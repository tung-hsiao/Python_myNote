# -*- coding: utf-8 -*-
"""opencv_test.ipynb

Automatically generated by Colaboratory.

"""

import cv2
import numpy as np
from google.colab.patches import cv2_imshow

# cv2.bitwise_and
# cv2.bitwise_not
# cv2.add

img_back = np.zeros([10,10])
# img_back[:,:] = 255
print("img_back")
print(img_back)

img_front = np.ones([3,3])
img_front[1:,1:] = 200
img_front[0,:] = img_front[:,0] = 64
print("img_front")
print(img_front)

# ===============================================
# put img_front on top-left corner of img_back.
cv2.imwrite("img_front.jpg", img_front)
cv2.imwrite("img_back.jpg", img_back)
img_front = cv2.imread("img_front.jpg",0)
img_back = cv2.imread("img_back.jpg",0)

ret, mask = cv2.threshold(img_front, 128, 255, cv2.THRESH_BINARY)
mask_inv = cv2.bitwise_not(mask)
print("mask")
print(mask)

rows,cols = img_front.shape
roi = img_back[0:rows, 0:cols]
print("roi")
print(roi)

img_back_masked = cv2.bitwise_and(roi, roi, mask=mask_inv)
img_front_masked = cv2.bitwise_and(img_front, img_front, mask=mask)

dst = cv2.add(img_back_masked, img_front_masked)
img_back[0:rows, 0:cols] = dst
print("result")
print(img_back)